openapi: 3.0.0
paths:
  /health:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
      tags:
        - health
  /menus:
    get:
      operationId: MenusController_getFullMenu
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
      tags:
        - menus
    post:
      operationId: MenusController_addMenuItem
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddMenuItemDto'
      responses:
        '201':
          description: The menu item has been successfully added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '409':
          description: Menu short name already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemShortNameAlreadyExistsException'
      tags:
        - menus
  /menus/{menuItemId}:
    get:
      operationId: MenusController_getMenuItem
      parameters:
        - name: menuItemId
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
        '404':
          description: MenuItem not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItemIdNotFoundException'
      tags:
        - menus
info:
  title: 'Micro-Service Restaurant: Menu Service'
  description: Menu Service Open API definition
  contact: {}
  version: 0.0.0
tags: []
servers:
  - url: https://menu-backend.spos.polytech.apoorva64.com/
    description: prod
components:
  schemas:
    MenuItem:
      type: object
      properties:
        _id:
          type: string
        fullName:
          type: string
        shortName:
          type: string
        price:
          type: number
        category:
          enum:
            - STARTER
            - MAIN
            - DESSERT
            - BEVERAGE
          type: string
        image:
          type: string
      required:
        - _id
        - fullName
        - shortName
        - price
        - category
        - image
    MenuItemIdNotFoundException:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
      required:
        - error
        - details
    AddMenuItemDto:
      type: object
      properties:
        fullName:
          type: string
        shortName:
          type: string
        price:
          type: number
          minimum: 1
        category:
          type: string
          enum:
            - STARTER
            - MAIN
            - DESSERT
            - BEVERAGE
        image:
          type: string
      required:
        - fullName
        - shortName
        - price
        - category
        - image
    MenuItemShortNameAlreadyExistsException:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
      required:
        - error
        - details
